generator client {
  provider        = "prisma-client-js"
  output          = "./client/loawiki"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["loawiki", "common"]
}

model log {
  id           Int      @id @default(autoincrement())
  name         String
  status       String
  message      String
  start_time   String?
  elapsed_time String?
  ip_address   String?
  create_at    DateTime @default(now())

  @@schema("common")
}

model code {
  id              Int      @id @default(autoincrement())
  parent_code     String
  code            String   @unique
  parent_top_code String
  display_name    String
  sort            Int
  use_yn          Boolean
  visible_yn      Boolean
  description     String?
  is_deleted      Boolean  @default(false)
  create_at       DateTime @default(now())
  update_at       DateTime @updatedAt

  @@schema("loawiki")
}

model menu_info {
  id               Int      @id @default(autoincrement())
  parent_menu_code String
  menu_code        String   @unique
  menu_url         String
  icon             String?
  sort             Int
  use_yn           Boolean
  visible_yn       Boolean
  description      String?
  is_deleted       Boolean  @default(false)
  create_at        DateTime @default(now())
  update_at        DateTime @updatedAt

  @@schema("common")
}

model root_class {
  id              Int    @id @default(autoincrement())
  root_class_code String @unique
  name            String
  jobs            job[]

  @@schema("loawiki")
}

model job {
  id                   Int                    @id @default(autoincrement())
  job_code             String                 @unique
  name                 String
  req_job              Int                    @unique
  root_class_code      String
  root_class           root_class             @relation(fields: [root_class_code], references: [root_class_code])
  skills               skill[]
  ark_grid_core        ark_grid_core[]
  ark_grid_combination ark_grid_combination[]

  @@schema("loawiki")
}

model skill {
  id Int @id

  name String

  type String

  category String

  icon_url String

  description String

  description_default String

  neutralization String?

  attack_type String?

  super_armor String?

  counter String?

  part_destruct String?

  tags String?

  job_code String

  job job @relation(fields: [job_code], references: [job_code])

  tripods tripod[]

  @@unique([job_code, name])
  @@schema("loawiki")
}

model tripod {
  id Int @id @default(autoincrement())

  tier Int

  sort Int

  name String

  icon_url String

  level_limit Int

  description String

  skill_id Int

  skill skill @relation(fields: [skill_id], references: [id])

  @@schema("loawiki")
}

model ark_grid_core {
  id             Int     @id @default(autoincrement())
  job_code       String
  engraving      String
  category       String
  name           String
  skill_effect   String?
  trigger_effect String?
  base_effect    String?
  job            job     @relation(fields: [job_code], references: [job_code])

  @@unique([job_code, engraving, category, name])
  @@schema("loawiki")
}

model ark_grid_combination {
  id               Int    @id @default(autoincrement())
  job_code         String
  engraving        String
  core_combination String
  key_skills       String
  operation        String
  job              job    @relation(fields: [job_code], references: [job_code])

  @@unique([job_code, engraving, core_combination])
  @@schema("loawiki")
}

model items {
  id                Int             @id
  name              String
  grade             String
  icon              String
  bundle_count      Int
  trade_remain_cnt  Int?
  yday_avg_price    Float
  recent_price      Int
  current_min_price Int
  history           items_history[]

  @@schema("loawiki")
}

model items_history {
  id                Int      @id @default(autoincrement())
  item_id           Int
  yday_avg_price    Float
  recent_price      Int
  current_min_price Int
  reg_date          DateTime @default(now()) @db.Timestamptz()
  item              items    @relation(fields: [item_id], references: [id])

  @@schema("loawiki")
}
